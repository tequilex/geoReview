{"version":3,"sources":["webpack://webpack-env/./src/js/ymaps.js","webpack://webpack-env/./src/index.js"],"names":["mapInit","ymaps","ready","let","myMap","Map","center","zoom","controls","balloonMaxWidth","balloonMaxHeight","searchControlProvider","events","add","e","coords","get","console","log","openBalloon","clusterer","Clusterer","clusterDisableClickZoom","options","set","renderGeoObjects","geoObjectsInCluster","getGeoObjects","now","Date","toLocaleDateString","getReviewsFromLS","reviews","localStorage","JSON","parse","getReviewList","currentGeoObjects","reviewListHTML","review","some","geoObject","stringify","geometry","_coordinates","author","place","reviewText","map","geoObjects","placemark","Placemark","stopPropagation","push","removeAll","remove","async","balloon","open","content","document","querySelector","addEventListener","reviewInput","getElementsByClassName","reviewTextarea","preventDefault","this","elements","value","i","length","style","border","close"],"mappings":"4BAAA,SAASA,IACLC,MAAMC,MAAM,KACRC,IAAIC,EAAQ,IAAIH,MAAMI,IAAI,MAAO,CAC7BC,OAAQ,CAAC,MAAO,OAChBC,KAAM,GACNC,SAAU,CAAC,eAAgB,eAC3BD,KAAM,IACP,CACCE,gBAAiB,IACjBC,iBAAkB,IAClBC,sBAAuB,kBAG3BP,EAAMQ,OAAOC,IAAI,QAAS,SAASC,GAC/BX,IAAIY,EAASD,EAAEE,IAAI,UACnBC,QAAQC,IAAIH,GAEZI,EAAYf,EAAOW,EAAQ,MAG/BK,EAAY,IAAInB,MAAMoB,UAAU,CAACC,wBAAyB,OAC1DF,EAAUG,QAAQC,IAAI,aAAc,OACpCC,EAAiBrB,GAEjBgB,EAAUR,OAAOC,IAAI,QAAS,SAASC,GACnCX,IAAIuB,EAAsBZ,EAAEE,IAAI,UAAUW,gBAC1CV,QAAQC,IAAIQ,GACZP,EAAYf,EAAOU,EAAEE,IAAI,UAAWU,OAI5CvB,IAAIiB,EACJ,IAAIQ,GAAM,IAAIC,MAAOC,qBAErB,SAASC,IACL,MAAMC,EAAUC,aAAaD,QAC7B,OAAOE,KAAKC,MAAMH,GAAW,MAGjC,SAASI,EAAcC,GACnBlC,IAAImC,EAAiB,GAErB,IAAK,MAAMC,KAAUR,IAAoB,CACrC,GAAIM,EAAkBG,KAAKC,GAAaP,KAAKQ,UAAUD,EAAUE,SAASC,gBAAkBV,KAAKQ,UAAUH,EAAOxB,SAAU,CACxHuB;;;8CAG8BC,EAAOM;6CACRN,EAAOO;4CACRlB;;4CAEAW,EAAOQ;;mBAM3C,OAAOT,EAGX,SAASb,EAAiBuB,GACtB,MAAMC,EAAa,GAEnB,IAAK,MAAMV,KAAUR,IAAoB,CACrC,MAAMmB,EAAY,IAAIjD,MAAMkD,UAAUZ,EAAOxB,QAC7CmC,EAAUtC,OAAOC,IAAI,QAAUC,IAC3BA,EAAEsC,kBACFjC,EAAY6B,EAAKlC,EAAEE,IAAI,UAAW,CAACF,EAAEE,IAAI,cAE7CiC,EAAWI,KAAKH,GAGpB9B,EAAUkC,YACVN,EAAIC,WAAWM,OAAOnC,GACtBA,EAAUP,IAAIoC,GACdD,EAAIC,WAAWpC,IAAIO,GAGvBoC,eAAerC,EAAY6B,EAAKjC,EAAQsB,SAC9BW,EAAIS,QAAQC,KAAK3C,EAAQ,CAC3B4C,iCAAkCvB,EAAcC;;;;;;uBAUpDuB,SAASC,cAAc,aAAaC,iBAAiB,SAAU,SAAShD,GACpEX,IAAI4D,EAAcH,SAASI,uBAAuB,iBAClD7D,IAAI8D,EAAiBL,SAASC,cAAc,qBAC5C/C,EAAEoD,iBACF,MAAM3B,EAAS,CACXxB,SACA8B,OAAQsB,KAAKC,SAASvB,OAAOwB,MAC7BvB,MAAOqB,KAAKC,SAAStB,MAAMuB,MAC3BtB,WAAYoB,KAAKC,SAAS7B,OAAO8B,OAGrC,IAAIF,KAAKC,SAASvB,OAAOwB,QAAUF,KAAKC,SAAStB,MAAMuB,QAAUF,KAAKC,SAAS7B,OAAO8B,MAAO,CACzF,IAAIlE,IAAImE,EAAI,EAAGA,EAAIP,EAAYQ,OAAQD,IAAK,CACxCP,EAAYO,GAAGE,MAAMC,OAAS,gBAGlCR,EAAeO,MAAMC,OAAS,gBAC9B,OAGJxC,aAAaD,QAAUE,KAAKQ,UAAU,IAAIX,IAAoBQ,IAE9Dd,EAAiBuB,GAEjBA,EAAIS,QAAQiB,WC/GxB1E,K","file":"index.d0ee1bb8b19429408ede.js","sourcesContent":["function mapInit() {\n    ymaps.ready(() => {\n        let myMap = new ymaps.Map('map', {\n            center: [55.76, 37.65],\n            zoom: 15,\n            controls: ['typeSelector', 'zoomControl'],\n            zoom: 12\n        }, {\n            balloonMaxWidth: 353,\n            balloonMaxHeight: 501,\n            searchControlProvider: 'yandex#search'\n        })\n\n        myMap.events.add('click', function(e) {\n            let coords = e.get('coords');\n            console.log(coords);\n\n            openBalloon(myMap, coords, [])\n        })\n\n        clusterer = new ymaps.Clusterer({clusterDisableClickZoom: true});\n        clusterer.options.set('hasBalloon', false);\n        renderGeoObjects(myMap);\n\n        clusterer.events.add('click', function(e) {\n            let geoObjectsInCluster = e.get('target').getGeoObjects()\n            console.log(geoObjectsInCluster);\n            openBalloon(myMap, e.get('coords'), geoObjectsInCluster)\n        })\n    })\n\n    let clusterer;\n    var now = new Date().toLocaleDateString();\n    \n    function getReviewsFromLS() {\n        const reviews = localStorage.reviews;\n        return JSON.parse(reviews || '[]')\n    };\n\n    function getReviewList(currentGeoObjects) {\n        let reviewListHTML = '';\n        \n        for (const review of getReviewsFromLS()) {\n            if (currentGeoObjects.some(geoObject => JSON.stringify(geoObject.geometry._coordinates) === JSON.stringify(review.coords))) {\n                reviewListHTML += `\n                <div class='review'>\n                <div class='review__info'>\n                <div class='review__author'>${review.author}</div>\n                <div class='review__place'>${review.place}</div>\n                <div class='review__date'>${now}</div>\n                </div>\n                <div class='review__text'>${review.reviewText}</div>\n                </div>\n                `\n            }\n        }\n\n        return reviewListHTML\n    }\n\n    function renderGeoObjects(map) {\n        const geoObjects = [];\n\n        for (const review of getReviewsFromLS()) {\n            const placemark = new ymaps.Placemark(review.coords);\n            placemark.events.add('click', (e) => {\n                e.stopPropagation();\n                openBalloon(map, e.get('coords'), [e.get('target')]);\n            })\n            geoObjects.push(placemark)\n        }\n\n        clusterer.removeAll();\n        map.geoObjects.remove(clusterer);\n        clusterer.add(geoObjects);\n        map.geoObjects.add(clusterer);\n    }\n    \n    async function openBalloon(map, coords, currentGeoObjects) {\n        await map.balloon.open(coords, {\n            content: `<div class= 'reviews'>${getReviewList(currentGeoObjects)}</div>` +\n            `<div class='review__title'>Отзыв:</div>\n            <form id='add-form'>\n            <input type='text' class='review__input' placeholder='Укажите ваше имя' name='author'><br><br>\n            <input type='text' class='review__input' placeholder='Укажите место' name='place'><br><br>\n            <textarea placeholder='Оставьте отзыв' class='review__textarea' name='review'></textarea><br></br>\n            <button id='add-btn'>Добавить</button><br>\n            </form>`\n        })\n        \n        document.querySelector('#add-form').addEventListener('submit', function(e) {\n            let reviewInput = document.getElementsByClassName('review__input');\n            let reviewTextarea = document.querySelector('.review__textarea');\n            e.preventDefault();\n            const review = {\n                coords,\n                author: this.elements.author.value,\n                place: this.elements.place.value,\n                reviewText: this.elements.review.value\n            };\n\n            if(!this.elements.author.value || !this.elements.place.value || !this.elements.review.value) {\n                for(let i = 0; i < reviewInput.length; i++) {\n                    reviewInput[i].style.border = '1px solid red'\n                };\n\n                reviewTextarea.style.border = '1px solid red'\n                return\n            }\n\n            localStorage.reviews = JSON.stringify([...getReviewsFromLS(), review]);\n\n            renderGeoObjects(map);\n\n            map.balloon.close()\n        })\n    }\n}\n\n\n\n\nexport {\n    mapInit\n}","import './assets/blocks/map.scss'\nimport { mapInit } from \"./js/ymaps\";\n\nmapInit()"],"sourceRoot":""}